include       /etc/nginx/mime.types;
default_type  application/octet-stream;

# Configure the server to listen on port 80 and respond to any hostname
server {
	listen       80; asdfdsfasffd
	server_name  _;

	# Define the default error pages
	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;

	# Limit client body size to 10MB
	client_max_body_size 10M;

	# Define a route for /kapouet
	location /kapouet {
		# Define the accepted HTTP methods
		if ($request_method !~ ^(GET|HEAD|POST)$ ) {
			return 405;
		}

		# Define a directory to search for files
		root /tmp/www;

		# Set a default file to answer if the request is a directory
		index index.html;

		# Execute PHP scripts
		location ~ \.php$ {
			try_files $uri =404;
			fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
			fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			include fastcgi_params;
		}
	}

	# Define a route for uploading files
	location /upload {
		# Define the accepted HTTP methods
		if ($request_method !~ ^(GET|POST)$ ) {
			return 405;
		}

		# Define where uploaded files should be saved
		client_body_temp_path /var/www/uploads;

		# Set permissions for uploaded files
		client_body_in_file_only clean;
		client_body_buffer_size 32K;
		client_max_body_size 10M;

		# Set a default file to answer if the request is a directory
		index index.html;
	}
}

# Configure a second server to listen on port 8080 and respond to the example.com hostname
server {
	listen       8080;
	server_name  example.com;

	# Define the default error pages
	error_page 404 /404.html;
	error_page 500 502 503 504 /50x.html;

	# Limit client body size to 10MB
	client_max_body_size 10M;

	# Define a route for /foo
	location /foo {
		# Define the accepted HTTP methods
		if ($request_method !~ ^(GET|HEAD)$ ) {
			return 405;
		}

		# Define a directory to search for files
		root /var/www/html;

		# Turn on directory listing
		autoindex on;
	}
}
